/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * django-allauth: Headless API
 * Allauth spec
 * OpenAPI spec version: 1
 */
import type { ChangePasswordBody } from '../djangoAllauthHeadlessAPI.schemas';

import { customAxiosInstance } from '../../axios';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

/**
 * In order to change the password of an account, the current and new
password must be provider.  However, accounts that were created by
signing up using a third-party provider do not have a password set. In
that case, the current password is not required.

 * @summary Change password
 */
export const postAllauthClientV1AccountPasswordChange = (
  client: 'app' | 'browser',
  changePasswordBody: ChangePasswordBody,
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<unknown>(
    {
      url: `/_allauth/${client}/v1/account/password/change`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: changePasswordBody,
    },
    options
  );
};

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type PostAllauthClientV1AccountPasswordChangeResult = NonNullable<
  Awaited<ReturnType<typeof postAllauthClientV1AccountPasswordChange>>
>;
