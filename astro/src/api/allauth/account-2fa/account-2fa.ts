/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * django-allauth: Headless API
 * Allauth spec
 * OpenAPI spec version: 1
 */
import type {
  AuthenticatorsResponse,
  RecoveryCodesResponse,
  SetupTOTPBody,
  StatusOKResponse,
  TOTPAuthenticatorResponse,
} from '../djangoAllauthHeadlessAPI.schemas';

import { customAxiosInstance } from '../../axios';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

/**
 * @summary List authenticators
 */
export const getAllauthClientV1AccountAuthenticators = (
  client: 'app' | 'browser',
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<AuthenticatorsResponse>(
    { url: `/_allauth/${client}/v1/account/authenticators`, method: 'GET' },
    options
  );
};
/**
 * Retrieve the information about the current TOTP authenticator, if any.

 * @summary TOTP authenticator status
 */
export const getAllauthClientV1AccountAuthenticatorsTotp = (
  client: 'app' | 'browser',
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<TOTPAuthenticatorResponse>(
    { url: `/_allauth/${client}/v1/account/authenticators/totp`, method: 'GET' },
    options
  );
};
/**
 * The code should be provided from the consuming TOTP authenticator
application which was generated using the TOTP authenticator secret
retrieved from the TOTP authenticator status endpoint.

 * @summary Activate TOTP
 */
export const postAllauthClientV1AccountAuthenticatorsTotp = (
  client: 'app' | 'browser',
  setupTOTPBody: SetupTOTPBody,
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<TOTPAuthenticatorResponse>(
    {
      url: `/_allauth/${client}/v1/account/authenticators/totp`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: setupTOTPBody,
    },
    options
  );
};
/**
 * Deactivates TOTP authentication. If the user authentication is not
sufficiently recent, a reauthentication flow (`401`) will is presented.

 * @summary Deactivate TOTP
 */
export const deleteAllauthClientV1AccountAuthenticatorsTotp = (
  client: 'app' | 'browser',
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<StatusOKResponse>(
    { url: `/_allauth/${client}/v1/account/authenticators/totp`, method: 'DELETE' },
    options
  );
};
/**
 * List recovery codes.

 * @summary List recovery codes
 */
export const getAllauthClientV1AccountAuthenticatorsRecoveryCodes = (
  client: 'app' | 'browser',
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<RecoveryCodesResponse>(
    { url: `/_allauth/${client}/v1/account/authenticators/recovery-codes`, method: 'GET' },
    options
  );
};
/**
 * @summary Regenerate recovery codes
 */
export const postAllauthClientV1AccountAuthenticatorsRecoveryCodes = (
  client: 'app' | 'browser',
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<unknown>(
    { url: `/_allauth/${client}/v1/account/authenticators/recovery-codes`, method: 'POST' },
    options
  );
};

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type GetAllauthClientV1AccountAuthenticatorsResult = NonNullable<
  Awaited<ReturnType<typeof getAllauthClientV1AccountAuthenticators>>
>;
export type GetAllauthClientV1AccountAuthenticatorsTotpResult = NonNullable<
  Awaited<ReturnType<typeof getAllauthClientV1AccountAuthenticatorsTotp>>
>;
export type PostAllauthClientV1AccountAuthenticatorsTotpResult = NonNullable<
  Awaited<ReturnType<typeof postAllauthClientV1AccountAuthenticatorsTotp>>
>;
export type DeleteAllauthClientV1AccountAuthenticatorsTotpResult = NonNullable<
  Awaited<ReturnType<typeof deleteAllauthClientV1AccountAuthenticatorsTotp>>
>;
export type GetAllauthClientV1AccountAuthenticatorsRecoveryCodesResult = NonNullable<
  Awaited<ReturnType<typeof getAllauthClientV1AccountAuthenticatorsRecoveryCodes>>
>;
export type PostAllauthClientV1AccountAuthenticatorsRecoveryCodesResult = NonNullable<
  Awaited<ReturnType<typeof postAllauthClientV1AccountAuthenticatorsRecoveryCodes>>
>;
