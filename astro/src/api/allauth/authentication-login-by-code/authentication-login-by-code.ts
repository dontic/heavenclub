/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * django-allauth: Headless API
 * Allauth spec
 * OpenAPI spec version: 1
 */
import type {
  AuthenticatedByCodeResponse,
  ConfirmLoginCodeBody,
  RequestLoginCodeBody,
} from '../djangoAllauthHeadlessAPI.schemas';

import { customAxiosInstance } from '../../axios';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

/**
 * Request a "special" login code that is sent to the user by email.

 * @summary Request login code
 */
export const postAllauthClientV1AuthCodeRequest = (
  client: 'app' | 'browser',
  requestLoginCodeBody: RequestLoginCodeBody,
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<unknown>(
    {
      url: `/_allauth/${client}/v1/auth/code/request`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: requestLoginCodeBody,
    },
    options
  );
};
/**
 * Use this endpoint to pass along the received "special" login code.

 * @summary Confirm login code
 */
export const postAllauthClientV1AuthCodeConfirm = (
  client: 'app' | 'browser',
  confirmLoginCodeBody: ConfirmLoginCodeBody,
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<AuthenticatedByCodeResponse>(
    {
      url: `/_allauth/${client}/v1/auth/code/confirm`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: confirmLoginCodeBody,
    },
    options
  );
};

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type PostAllauthClientV1AuthCodeRequestResult = NonNullable<
  Awaited<ReturnType<typeof postAllauthClientV1AuthCodeRequest>>
>;
export type PostAllauthClientV1AuthCodeConfirmResult = NonNullable<
  Awaited<ReturnType<typeof postAllauthClientV1AuthCodeConfirm>>
>;
