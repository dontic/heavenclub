/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * django-allauth: Headless API
 * Allauth spec
 * OpenAPI spec version: 1
 */
import type {
  AddWebAuthnAuthenticatorBody,
  AuthenticatedResponse,
  PasskeySignupBody,
  WebAuthnRequestOptionsResponseResponse,
} from '../djangoAllauthHeadlessAPI.schemas';

import { customAxiosInstance } from '../../axios';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

/**
 * You initiate the passkey signup flow by inputting (`POST`) the required properties (e.g. email)
similar to the regular account signup, except that the `password` is to be left out.
The user will then be required to verify the email address, after which WebAuthn credential
creation options can be retrieved (`GET`) and used to actualy complete (`PUT`) the flow.

 * @summary Initiate the passkey signup flow
 */
export const postAllauthClientV1AuthWebauthnSignup = (
  client: 'app' | 'browser',
  passkeySignupBody: PasskeySignupBody,
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<unknown>(
    {
      url: `/_allauth/${client}/v1/auth/webauthn/signup`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: passkeySignupBody,
    },
    options
  );
};
/**
 * Returns the WebAuthn credential request options, that can be
processed using `parseRequestOptionsFromJSON()` on the frontend.

 * @summary Get passkey credential request options
 */
export const getAllauthClientV1AuthWebauthnSignup = (
  client: 'app' | 'browser',
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<WebAuthnRequestOptionsResponseResponse>(
    { url: `/_allauth/${client}/v1/auth/webauthn/signup`, method: 'GET' },
    options
  );
};
/**
 * Complete the passkey signup flow by handing over the WebAuthn credential.

 * @summary Complete the passkey signup flow
 */
export const putAllauthClientV1AuthWebauthnSignup = (
  client: 'app' | 'browser',
  addWebAuthnAuthenticatorBody: AddWebAuthnAuthenticatorBody,
  options?: SecondParameter<typeof customAxiosInstance>
) => {
  return customAxiosInstance<AuthenticatedResponse>(
    {
      url: `/_allauth/${client}/v1/auth/webauthn/signup`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: addWebAuthnAuthenticatorBody,
    },
    options
  );
};

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type PostAllauthClientV1AuthWebauthnSignupResult = NonNullable<
  Awaited<ReturnType<typeof postAllauthClientV1AuthWebauthnSignup>>
>;
export type GetAllauthClientV1AuthWebauthnSignupResult = NonNullable<
  Awaited<ReturnType<typeof getAllauthClientV1AuthWebauthnSignup>>
>;
export type PutAllauthClientV1AuthWebauthnSignupResult = NonNullable<
  Awaited<ReturnType<typeof putAllauthClientV1AuthWebauthnSignup>>
>;
